{"version":3,"sources":["Header.js","Loading.js","CurrentWeather.js","HourlyWeather.js","DailyWeather.js","Weather.js","service/service.js","database/database.js","AreaSearch.js","MainPage.js","Footer.js","img/bg_day.png","img/bg_night.png","App.js","index.js"],"names":["Header","className","Loading","CurrentWeather","data","timezone","backgroundChange","selectedPage","dayOrNight","useState","fadeIn","setFadeIn","useEffect","sunrise","sunset","setTimeout","opacity","transition","sec","dt","date","Date","currentTime","toLocaleTimeString","hour","minute","hour12","timeZone","timestr","toLocaleDateString","month","day","getTime","value","style","src","weather","icon","Math","round","temp","description","floor","humidity","HourlyWeather","backgroundChangeforHourly","twelveHourData","slice","getDate","twelveHourDataUI","map","i","pop","wind_speed","DailyWeather","dailyDataUI","max","min","Weather","apiFilter","lat","lon","results","apiData","setApiData","apiUrl","process","axios","get","then","GetWeatherApi","current","hourly","daily","database","label","AreaSearch","getCity","selectedCityName","options","htmlFor","name","id","onChange","MainPage","setSelectedPage","setApiFilter","setSelectedCityName","setLat","setLon","categories","pageSelect","event","selected","currentTarget","onClick","selector","selectedCity","forEach","val","Footer","year","getFullYear","App","setDayOrNight","dayStyle","setDayStyle","nightStyle","setNightStyle","dayBg","nightBg","currenttime","test","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d7d60fb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <div className=\"relative sm:w-screen flex justify-center sm:h-24\">\n            <h1 className=\"text-amber-400 text-6xl font-pacifico pt-8 pl-10 absolute top-0 left-0 z-50 sm:text-5xl sm:pt-5 sm:pl-5\">\n                Weather\n            </h1>\n            <h1 className=\"text-white text-6xl font-pacifico pt-8 pl-10 absolute top-1 left-1 sm:text-5xl sm:pt-5 sm:pl-5\">\n                Weather\n            </h1>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\" h-screen bg-transparent text-center mt-48\">\n            <i className=\"fas fa-sun text-6xl animate-spin-slow text-amber-400 py-auto\"></i>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\n\nfunction CurrentWeather({ data, timezone, backgroundChange, selectedPage, dayOrNight }) {\n    const [fadeIn, setFadeIn] = useState(null);\n\n    useEffect(() => {\n        if (data?.sunrise && data?.sunset) {\n            backgroundChange(data.sunrise, data.sunset);\n        } else {\n            null;\n        }\n        if (selectedPage === 'current') {\n            setTimeout(() => {\n                setFadeIn({\n                    opacity: '1',\n                    transition: 'opacity 0.5s ease',\n                });\n            }, 500);\n        } else {\n            setFadeIn(null);\n        }\n    }, [selectedPage, data?.sunrise, data?.sunset]);\n\n    if (data) {\n        const sec = data.dt;\n        const date = new Date(sec * 1000);\n        const currentTime = new Date().toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true,\n            timeZone: timezone,\n        });\n\n        const timestr = date.toLocaleDateString('en-US', {\n            month: 'long',\n            day: 'numeric',\n            timeZone: timezone,\n        });\n\n        const getTime = (value) => {\n            const date = new Date(value * 1000);\n            const time = date.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: true,\n                timeZone: timezone,\n            });\n            return time;\n        };\n\n        return (\n            <div className=\"font-baloo pt-10 opacity-0\" style={fadeIn}>\n                <div\n                    className={\n                        dayOrNight === 'day'\n                            ? 'bg-white bg-opacity-60 rounded-xl flex-col p-6 mt-10 w-400px mx-auto xs:w-11/12'\n                            : 'bg-gray-300 bg-opacity-70 rounded-xl flex-col p-6 mt-10 w-400px mx-auto xs:w-11/12'\n                    }\n                >\n                    <div className=\"flex flex-row justify-between\">\n                        <p className=\"text-2xl pb-4 pl-7 pt-1.5 font-medium sm:pl-1\">{timestr}</p>\n                        <div className=\"pr-7 sm:pr-1\">\n                            <p className=\"text-sm w-full text-right\">Current Time</p>\n                            <p className=\"w-full text-right\">{currentTime}</p>\n                        </div>\n                    </div>\n                    <div className=\"w-full mx-auto\">\n                        <div className=\"flex flex-row w-full\">\n                            <div className=\"w-48\">\n                                <img\n                                    src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n                                    className=\"mx-auto w-28\"\n                                />\n                            </div>\n                            <div className=\"pt-5 xs:pr-3\">\n                                <p className=\"text-5xl font-medium\">\n                                    {Math.round(data.temp)}\n                                    <span className=\"text-3xl align-top font-normal\">&deg;F</span>\n                                </p>\n                                <p className=\"text-xl pl-4 leading-5\">{data.weather[0].description}</p>\n                            </div>\n                        </div>\n                        <div className=\"grid grid-cols-2 mx-auto w-60 pt-4 pl-10\">\n                            <p className=\"text-lg\">Humidity:</p>\n                            <p className=\"text-lg font-medium\">{Math.floor(data.humidity / 10) * 10}%</p>\n                            <p className=\"text-lg\">Sunrise:</p>\n                            <p className=\"text-lg font-medium\">{getTime(data.sunrise)}</p>\n                            <p className=\"text-lg\">Sunset:</p>\n                            <p className=\"text-lg font-medium\">{getTime(data.sunset)}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\nCurrentWeather.propTypes = {\n    data: PropTypes.object,\n    timezone: PropTypes.string,\n    backgroundChange: PropTypes.func.isRequired,\n    selectedPage: PropTypes.string.isRequired,\n    dayOrNight: PropTypes.string,\n};\n\nexport default CurrentWeather;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\n\nfunction HourlyWeather({ data, timezone, backgroundChangeforHourly, selectedPage, dayOrNight }) {\n    const [fadeIn, setFadeIn] = useState(null);\n\n    useEffect(() => {\n        if (data) {\n            backgroundChangeforHourly(data[0].weather[0].icon);\n        } else {\n            null;\n        }\n        if (selectedPage === 'hourly') {\n            setTimeout(() => {\n                setFadeIn('1');\n            }, 500);\n        } else {\n            setFadeIn(null);\n        }\n    }, [selectedPage, data]);\n\n    if (data) {\n        const twelveHourData = data.slice(0, 12);\n        const getDate = (value) => {\n            const date = new Date(value * 1000);\n            const day = date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric',\n                timeZone: timezone,\n            });\n            return day;\n        };\n        const getTime = (value) => {\n            const date = new Date(value * 1000);\n            const time = date.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                hour12: true,\n                timeZone: timezone,\n            });\n            return time;\n        };\n        const twelveHourDataUI = twelveHourData.map((value, i) => {\n            return (\n                <div\n                    key={i}\n                    className={\n                        dayOrNight === 'day'\n                            ? 'bg-white bg-opacity-60 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                            : 'bg-gray-300 bg-opacity-70 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                    }\n                    style={{ opacity: fadeIn, transition: `opacity ${i * 0.3}s ease` }}\n                >\n                    <p className=\"text-xl font-medium\">{getTime(value.dt)}</p>\n                    <p className=\"text-sm sm:float-left xs:float-none\">{getDate(value.dt)}</p>\n\n                    <div className=\"flex flex-row justify-center sm:flex-none sm:float-left sm:w-2/5 sm:flex-col xs:flex xs:flex-row xs:float-none xs:w-full\">\n                        <div>\n                            <img\n                                className=\"w-20\"\n                                src={`http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`}\n                            />\n                        </div>\n                        <div className=\"w-1/2 sm:flex sm:flex-row sm:w-full xs:flex-none xs:flex-col xs:w-1/2 xs:pl-2\">\n                            <p\n                                className=\"font-medium text-3xl\n                        \"\n                            >\n                                {Math.round(value.temp)}\n                                <span className=\"text-lg align-top font-normal\">&deg;F</span>\n                            </p>\n                            <p className=\"leading-5 text-base pl-3 sm:pt-4 sm:pl-1 xs:pt-0 xs:pl-3\">\n                                {value.weather[0].description}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-3 sm:mt-4 xs:mt-0 xs:pl-5\">\n                        <p className=\"col-span-2 pl-3\">Precipitation:</p>\n                        <p className=\"font-medium\">{Math.floor(value.pop / 10) * 10}%</p>\n                        <p className=\"col-span-2 pl-3\">Humidity:</p>\n                        <p className=\"font-medium\">{Math.floor(value.humidity / 10) * 10}%</p>\n                        <p className=\"col-span-2 pl-3\">Wind:</p>\n                        <p className=\"font-medium\">{Math.round(value.wind_speed)}mph</p>\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"flex flex-col justify-center\">\n                <div className=\"grid grid-cols-4 w-1100px mx-auto pt-16 xl:grid-cols-3 xl:w-800px lg:w-765px md:grid-cols-2 md:w-530px sm:grid-cols-none sm:w-full sm:px-5 sm:pt-20\">\n                    {twelveHourDataUI}\n                </div>\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\nHourlyWeather.propTypes = {\n    data: PropTypes.array,\n    timezone: PropTypes.string,\n    backgroundChangeforHourly: PropTypes.func.isRequired,\n    selectedPage: PropTypes.string.isRequired,\n    dayOrNight: PropTypes.string,\n};\n\nexport default HourlyWeather;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\n\nfunction DailyWeather({ data, timezone, backgroundChange, selectedPage, dayOrNight }) {\n    const [fadeIn, setFadeIn] = useState(null);\n\n    useEffect(() => {\n        if (data) {\n            backgroundChange(data[0].sunrise, data[0].sunset);\n        } else {\n            null;\n        }\n        if (selectedPage === 'daily') {\n            setTimeout(() => {\n                setFadeIn('1');\n            }, 500);\n        } else {\n            setFadeIn(null);\n        }\n    }, [selectedPage, data]);\n\n    if (data) {\n        const getDate = (value) => {\n            const date = new Date(value * 1000);\n            const day = date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric',\n                timeZone: timezone,\n            });\n            return day;\n        };\n        const dailyDataUI = data.map((value, i) => {\n            return (\n                <div\n                    key={i}\n                    className={\n                        dayOrNight === 'day'\n                            ? 'bg-white bg-opacity-60 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                            : 'bg-gray-300 bg-opacity-70 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                    }\n                    style={{ opacity: fadeIn, transition: `opacity ${i * 0.3}s ease` }}\n                >\n                    <p className=\"text-xl pb-1 font-medium\">{getDate(value.dt)}</p>\n                    <div className=\"flex flex-row justify-center h-28\">\n                        <div className=\"\">\n                            <img src={`http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`} />\n                        </div>\n                        <div className=\"w-1/2 pr-3 xs:w-5/12\">\n                            <div className=\"text-right\">\n                                <span className=\"text-sm\">MAX </span>\n                                <span className=\"font-medium text-3xl\">{Math.round(value.temp.max)}</span>\n                                <span className=\"text-lg align-top\">&deg;F</span>\n                            </div>\n                            <div className=\"text-right\">\n                                <span className=\"text-sm\">MIN </span>\n                                <span className=\"font-medium text-3xl\">{Math.round(value.temp.min)}</span>\n                                <span className=\"text-lg align-top\">&deg;F</span>\n                            </div>\n                            <p className=\"leading-5 capitalize pl-3 sm:text-right\">{value.weather[0].description}</p>\n                        </div>\n                    </div>\n                    <div\n                        className=\"grid grid-cols-3 mt-3 align-bottom sm:px-16 xs:px-10 \n                    \"\n                    >\n                        <p className=\"col-span-2 pl-5 xs:pl-1\">Precipitation:</p>\n                        <p className=\"font-medium\">{Math.floor(value.pop / 10) * 10}%</p>\n                        <p className=\"col-span-2 pl-5 xs:pl-1\">Humidity:</p>\n                        <p className=\"font-medium\">{Math.floor(value.humidity / 10) * 10}%</p>\n                    </div>\n                </div>\n            );\n        });\n        return (\n            <div className=\"grid grid-cols-4 w-1100px mx-auto pt-16 xl:grid-cols-3 xl:w-800px lg:w-765px md:grid-cols-2 md:w-530px sm:grid-cols-none sm:w-full sm:px-5 sm:pt-20\">\n                {dailyDataUI}\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\nDailyWeather.propTypes = {\n    data: PropTypes.array,\n    timezone: PropTypes.string,\n    backgroundChange: PropTypes.func.isRequired,\n    selectedPage: PropTypes.string.isRequired,\n    dayOrNight: PropTypes.string,\n};\n\nexport default DailyWeather;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyWeather from './HourlyWeather';\nimport DailyWeather from './DailyWeather';\nimport { GetWeatherApi } from './service/service';\nimport Loading from './Loading';\n\nfunction Weather({ selectedPage, apiFilter, lat, lon, backgroundChange, backgroundChangeforHourly, dayOrNight }) {\n    const results = GetWeatherApi(apiFilter, lat, lon);\n    if (results.current || results.hourly || results.daily) {\n        if (selectedPage === 'current') {\n            return (\n                <CurrentWeather\n                    data={results.current}\n                    timezone={results.timezone}\n                    backgroundChange={backgroundChange}\n                    selectedPage={selectedPage}\n                    dayOrNight={dayOrNight}\n                />\n            );\n        } else if (selectedPage === 'hourly') {\n            return (\n                <HourlyWeather\n                    data={results.hourly}\n                    timezone={results.timezone}\n                    backgroundChangeforHourly={backgroundChangeforHourly}\n                    selectedPage={selectedPage}\n                    dayOrNight={dayOrNight}\n                />\n            );\n        } else if (selectedPage === 'daily') {\n            return (\n                <DailyWeather\n                    data={results.daily}\n                    timezone={results.timezone}\n                    backgroundChange={backgroundChange}\n                    selectedPage={selectedPage}\n                    dayOrNight={dayOrNight}\n                />\n            );\n        }\n    } else {\n        return <Loading />;\n    }\n}\n\nWeather.propTypes = {\n    selectedPage: PropTypes.string.isRequired,\n    apiFilter: PropTypes.string.isRequired,\n    lat: PropTypes.number.isRequired,\n    lon: PropTypes.number.isRequired,\n    backgroundChange: PropTypes.func.isRequired,\n    backgroundChangeforHourly: PropTypes.func.isRequired,\n    dayOrNight: PropTypes.string,\n};\n\nexport default Weather;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nexport function GetWeatherApi(apiFilter, lat, lon) {\n    const [apiData, setApiData] = useState({});\n    const apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${apiFilter}&units=imperial&appid=${API_KEY}`;\n    useEffect(() => {\n        axios.get(apiUrl).then(({ data }) => {\n            setApiData(data);\n        });\n    }, [apiUrl]);\n    return apiData;\n}\n","export const database = [\n    {\n        label: 'Los Angeles',\n        value: 'losAngeles',\n        lat: 34.05,\n        lon: -118.24,\n        timezone: 'America/Los_Angeles',\n    },\n    {\n        label: 'New York',\n        value: 'newYork',\n        lat: 40.71,\n        lon: -74.01,\n        timezone: 'America/New_York',\n    },\n    {\n        label: 'London',\n        value: 'london',\n        lat: 51.51,\n        lon: -0.13,\n        timezone: 'Europe/London',\n    },\n    {\n        label: 'Tokyo',\n        value: 'tokyo',\n        lat: 35.68,\n        lon: 139.65,\n        timezone: 'Japan',\n    },\n    {\n        label: 'Paris',\n        value: 'paris',\n        lat: 48.86,\n        lon: 2.35,\n        timezone: 'Europe/Paris',\n    },\n    {\n        label: 'Hong Kong',\n        value: 'hong kong',\n        lat: 22.32,\n        lon: 114.17,\n        timezone: 'Asia/Hong_Kong',\n    },\n    {\n        label: 'Singapore',\n        value: 'singapore',\n        lat: 1.35,\n        lon: 103.82,\n        timezone: '\tAsia/Singapore',\n    },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { database } from './database/database';\n\nfunction AreaSearch({ getCity, dayOrNight, selectedCityName }) {\n    const options = database.map((value, i) => {\n        return (\n            <option value={value.value} key={i}>\n                {value.label}\n            </option>\n        );\n    });\n    return (\n        <div\n            className={\n                dayOrNight === 'day'\n                    ? 'font-baloo font-semibold mt-32 h-12 text-gray-600 flex absolute top-0 right-56 pt-0 2xl:right-36 xl:right-8 lg:mt-12 sm:right-3 sm:top-28'\n                    : ' font-baloo font-semibold mt-32 h-12 text-white flex absolute top-0 right-56 pt-0 2xl:right-36 xl:right-8 lg:mt-12 sm:right-3 sm:top-28'\n            }\n        >\n            <label htmlFor=\"city\" className=\"pr-2 text-lg h-12 mt-2\">\n                Location{' '}\n            </label>\n            <select\n                className={\n                    dayOrNight === 'day'\n                        ? 'rounded bg-white bg-opacity-60 text-gray-600 text-xl px-3 sm:text-lg sm:h-10 cursor-pointer'\n                        : 'rounded bg-yellow-400 bg-opacity-30 text-white text-xl px-3 sm:text-lg sm:h-10 cursor-pointer'\n                }\n                name=\"city\"\n                id=\"city\"\n                onChange={getCity}\n                value={selectedCityName}\n            >\n                {options}\n            </select>\n        </div>\n    );\n}\n\nAreaSearch.propTypes = {\n    getCity: PropTypes.func.isRequired,\n    dayOrNight: PropTypes.string,\n    selectedCityName: PropTypes.string.isRequired,\n};\n\nexport default AreaSearch;\n","import React, { useState } from 'react';\nimport Weather from './Weather';\nimport AreaSearch from './AreaSearch';\nimport { database } from './database/database';\n\nfunction MainPage({ backgroundChange, backgroundChangeforHourly, dayOrNight }) {\n    const [selectedPage, setSelectedPage] = useState('current');\n    const [apiFilter, setApiFilter] = useState('minutely,hourly,daily,alerts');\n    const [selectedCityName, setSelectedCityName] = useState(database[0].label);\n    const [lat, setLat] = useState(database[0].lat);\n    const [lon, setLon] = useState(database[0].lon);\n\n    const categories = {\n        current: 'minutely,hourly,daily,alerts',\n        hourly: 'minutely,current,daily,alerts',\n        daily: 'minutely,hourly,current,alerts',\n    };\n\n    const pageSelect = (event) => {\n        const selected = event.currentTarget.value;\n        setSelectedPage(selected);\n        setApiFilter(\n            selected === 'current' ? categories.current : selected === 'hourly' ? categories.hourly : categories.daily\n        );\n    };\n\n    const getCity = (event) => {\n        const selectedCity = event.currentTarget.value;\n        setSelectedCityName(selectedCity);\n        database.forEach((val) => {\n            if (val.value === selectedCity) {\n                setLat(val.lat);\n                setLon(val.lon);\n            }\n        });\n    };\n\n    const resetBtn = () => {\n        setSelectedPage('current');\n        setApiFilter('minutely,hourly,daily,alerts');\n        setSelectedCityName(database[0].label);\n        setLat(database[0].lat);\n        setLon(database[0].lon);\n    };\n\n    return (\n        <div>\n            <div\n                onClick={resetBtn}\n                className=\"opacity-0 w-64 h-24 flex absolute top-5 left-7 z-50 cursor-pointer sm:top-2 sm:left-2 sm:w-56 sm:h-20\"\n            ></div>\n            <div className=\"flex flex-row justify-between \">\n                <div className=\"w-1000px h-12 pl-4 mt-32 flex flex-row justify-left bg-gradient-to-r from-amber-400 via-amber-400 bg-opacity-30 text-white xl:w-800px lg:w-600px sm:mt-0 sm:bg-amber-400 sm:justify-center sm:w-screen sm:pl-0 z-40\">\n                    <button\n                        onClick={pageSelect}\n                        value=\"current\"\n                        className={\n                            selectedPage === 'current'\n                                ? ' text-gray-600 px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                                : 'px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                        }\n                    >\n                        Today\n                    </button>\n                    <button\n                        onClick={pageSelect}\n                        value=\"hourly\"\n                        className={\n                            selectedPage === 'hourly'\n                                ? 'text-gray-600  px-6 h-12 mx-20 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 lg:mx-10 xs:text-lg'\n                                : 'px-6 h-12 mx-20 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 lg:mx-10 xs:text-lg'\n                        }\n                    >\n                        Hourly\n                    </button>\n                    <button\n                        onClick={pageSelect}\n                        value=\"daily\"\n                        className={\n                            selectedPage === 'daily'\n                                ? 'text-gray-600 px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                                : 'px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                        }\n                    >\n                        Daily\n                    </button>\n                </div>\n                <AreaSearch\n                    selector={database}\n                    getCity={getCity}\n                    dayOrNight={dayOrNight}\n                    selectedCityName={selectedCityName}\n                />\n            </div>\n            <div className=\"font-baloo\">\n                <Weather\n                    selectedPage={selectedPage}\n                    apiFilter={apiFilter}\n                    lat={lat}\n                    lon={lon}\n                    backgroundChange={backgroundChange}\n                    backgroundChangeforHourly={backgroundChangeforHourly}\n                    dayOrNight={dayOrNight}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default MainPage;\n","import React from 'react';\n\nfunction Footer() {\n    let day = new Date();\n    let year = day.getFullYear();\n    return (\n        <div className=\"text-right pt-40 mr-10 pb-5\">\n            <small className=\"w-screen font-baloo text-amber-400\">&copy; {year} Ryo Inciong</small>\n        </div>\n    );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/bg_day.af0b52c3.png\";","export default __webpack_public_path__ + \"static/media/bg_night.b29ac4bd.png\";","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport MainPage from './MainPage';\nimport Footer from './Footer';\nimport dayBg from './img/bg_day.png';\nimport nightBg from './img/bg_night.png';\n\nfunction App() {\n    const [dayOrNight, setDayOrNight] = useState();\n    const [dayStyle, setDayStyle] = useState(null);\n    const [nightStyle, setNightStyle] = useState(null);\n\n    const backgroundChangeforHourly = (icon) => {\n        if (/d$/.test(icon)) {\n            setDayOrNight('day');\n        } else {\n            setDayOrNight('night');\n        }\n    };\n\n    const backgroundChange = (sunrise, sunset) => {\n        const currenttime = new Date().getTime() / 1000;\n        if (currenttime - sunrise > 0 && currenttime - sunset < 0) {\n            setDayOrNight('day');\n        } else {\n            setDayOrNight('night');\n        }\n    };\n\n    useEffect(() => {\n        if (dayOrNight === 'day') {\n            setDayStyle({\n                opacity: '1',\n                transition: 'opacity 0.5s ease',\n            });\n            setNightStyle(null);\n        } else if (dayOrNight === 'night') {\n            setNightStyle({\n                opacity: '1',\n                transition: 'opacity 0.5s ease',\n            });\n            setDayStyle(null);\n        }\n    }, [dayOrNight]);\n\n    return (\n        <div>\n            <div className=\"flex fixed bottom-0 left-0 h-screen w-screen -z-10\">\n                <img\n                    src={dayBg}\n                    className=\"flex fixed object-cover w-full min-w-max bottom-0 right-0 min-h-screen opacity-0\"\n                    style={dayStyle}\n                ></img>\n                <img\n                    src={nightBg}\n                    className=\"flex fixed object-cover w-full min-w-max bottom-0 right-0 min-h-screen opacity-0\"\n                    style={nightStyle}\n                ></img>\n            </div>\n            <Header className={dayOrNight} />\n            <MainPage\n                backgroundChange={backgroundChange}\n                backgroundChangeforHourly={backgroundChangeforHourly}\n                dayOrNight={dayOrNight}\n            />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}