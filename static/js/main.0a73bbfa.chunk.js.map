{"version":3,"sources":["../node_modules/typescript/lib sync","Header.js","Loading.js","CurrentWeather.js","HourlyWeather.js","DailyWeather.js","Weather.js","service/service.js","database/database.js","AreaSearch.js","MainPage.js","Footer.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Header","className","Loading","CurrentWeather","data","timezone","backgroundChange","selectedPage","dayOrNight","useState","fadeIn","setFadeIn","useEffect","setTimeout","opacity","transition","console","log","sec","dt","date","Date","currentTime","toLocaleTimeString","hour","minute","hour12","timeZone","timestr","toLocaleDateString","month","day","getTime","value","sunrise","sunset","style","src","weather","icon","Math","round","temp","description","humidity","HourlyWeather","backgroundChangeforHourly","sixHourData","slice","getDate","sixHourDataUI","map","i","pop","wind_speed","DailyWeather","option","sunriseSec","sunsetSec","dailyDataUI","max","min","Weather","apiFilter","lat","lon","results","apiData","setApiData","apiUrl","axios","get","then","GetWeatherApi","current","hourly","daily","database","label","AreaSearch","onChange","selectedCityName","options","htmlFor","name","MainPage","setSelectedPage","setApiFilter","setSelectedCityName","setLat","setLon","setTimeZone","categories","pageSelect","event","selected","currentTarget","onClick","selector","selectedCity","forEach","val","Footer","year","getFullYear","App","setDayOrNight","window","innerWidth","innerHeight","backgroundAttachment","backgroundPosition","backgroundSize","backgroundRepeat","height","minHeight","currenttime","test","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a73bbfa.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 14;","import React from 'react';\n\nfunction Header() {\n    return (\n        <div className=\"relative sm:w-screen flex justify-center sm:h-24\">\n            <h1 className=\"text-amber-400 text-6xl font-pacifico pt-8 pl-10 absolute top-0 left-0 z-50 sm:text-5xl sm:pt-5 sm:pl-5\">\n                Weather\n            </h1>\n            <h1 className=\"text-white text-6xl font-pacifico pt-8 pl-10 absolute top-1 left-1 sm:text-5xl sm:pt-5 sm:pl-5\">\n                Weather\n            </h1>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Loading() {\n    return (\n        <div className=\" h-screen bg-transparent text-center mt-48\">\n            <i className=\"fas fa-sun text-9xl animate-spin-slow text-amber-400 py-auto\"></i>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport Loading from './Loading';\n\n/* eslint-disable react/prop-types */\nfunction CurrentWeather({ data, timezone, backgroundChange, selectedPage, dayOrNight }) {\n    const [fadeIn, setFadeIn] = useState(null);\n    useEffect(() => {\n        if (selectedPage === 'current') {\n            setTimeout(() => {\n                setFadeIn({\n                    opacity: '1',\n                    transition: 'opacity 0.5s ease',\n                });\n                console.log('fadein');\n            }, 500);\n        } else {\n            setFadeIn(null);\n        }\n        console.log(fadeIn);\n    }, [selectedPage]);\n    if (data) {\n        const sec = data.dt;\n        const date = new Date(sec * 1000);\n        const currentTime = new Date().toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true,\n            timeZone: timezone,\n        });\n\n        const timestr = date.toLocaleDateString('en-US', {\n            month: 'long',\n            day: 'numeric',\n            timeZone: timezone,\n        });\n\n        const getTime = (value) => {\n            const date = new Date(value * 1000);\n            const time = date.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: true,\n                timeZone: timezone,\n            });\n            return time;\n        };\n        backgroundChange(data.sunrise, data.sunset);\n        // backgroundChange(data.weather[0].icon);\n\n        return (\n            <div className=\"font-baloo pt-10 opacity-0\" style={fadeIn}>\n                <div\n                    className={\n                        dayOrNight === 'day'\n                            ? 'bg-white bg-opacity-60 rounded-xl flex-col p-6 mt-10 w-400px mx-auto xs:w-11/12'\n                            : 'bg-gray-300 bg-opacity-70 rounded-xl flex-col p-6 mt-10 w-400px mx-auto xs:w-11/12'\n                    }\n                >\n                    <div className=\"flex flex-row justify-between\">\n                        <p className=\"text-2xl pb-4 pl-7 pt-1.5 font-medium sm:pl-1\">{timestr}</p>\n                        <div className=\"pr-7 sm:pr-1\">\n                            <p className=\"text-sm w-full text-right\">Current Time</p>\n                            <p className=\"w-full text-right\">{currentTime}</p>\n                        </div>\n                    </div>\n                    <div className=\"w-full mx-auto\">\n                        <div className=\"flex flex-row w-full\">\n                            <div className=\"w-48\">\n                                <img\n                                    src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n                                    className=\"mx-auto w-28\"\n                                />\n                            </div>\n                            <div className=\"pt-5 xs:pr-3\">\n                                <p className=\"text-5xl font-medium\">\n                                    {Math.round(data.temp)}\n                                    <span className=\"text-3xl align-top font-normal\">&deg;F</span>\n                                </p>\n                                <p className=\"text-xl pl-4 leading-5\">{data.weather[0].description}</p>\n                            </div>\n                        </div>\n                        <div className=\"grid grid-cols-2 mx-auto w-60 pt-4 pl-10\">\n                            <p className=\"text-lg\">Humidity:</p>\n                            <p className=\"text-lg font-medium\">{data.humidity}%</p>\n                            <p className=\"text-lg\">Sunrise:</p>\n                            <p className=\"text-lg font-medium\">{getTime(data.sunrise)}</p>\n                            <p className=\"text-lg\">Sunset:</p>\n                            <p className=\"text-lg font-medium\">{getTime(data.sunset)}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\nexport default CurrentWeather;\n","import React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\n\n/* eslint-disable react/prop-types */\n\nfunction HourlyWeather({ data, timezone, backgroundChangeforHourly, selectedPage, dayOrNight }) {\n    const [fadeIn, setFadeIn] = useState(null);\n    useEffect(() => {\n        if (selectedPage === 'hourly') {\n            setTimeout(() => {\n                setFadeIn('1');\n                console.log('fadein');\n            }, 500);\n        } else {\n            setFadeIn(null);\n        }\n        console.log(fadeIn);\n    }, [selectedPage]);\n    if (data) {\n        const sixHourData = data.slice(0, 12);\n        const sec = data[0].dt;\n        const date = new Date(sec * 1000);\n        const timestr = date.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            timeZone: timezone,\n        });\n        const getDate = (value) => {\n            const date = new Date(value * 1000);\n            const day = date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric',\n                timeZone: timezone,\n            });\n            return day;\n        };\n        const getTime = (value) => {\n            const date = new Date(value * 1000);\n            const time = date.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                hour12: true,\n                timeZone: timezone,\n            });\n            return time;\n        };\n        const sixHourDataUI = sixHourData.map((value, i) => {\n            return (\n                <div\n                    key={i}\n                    className={\n                        dayOrNight === 'day'\n                            ? 'bg-white bg-opacity-60 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                            : 'bg-gray-300 bg-opacity-70 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                    }\n                    style={{ opacity: fadeIn, transition: `opacity ${i * 0.3}s ease` }}\n                >\n                    <p className=\"text-xl font-medium\">{getTime(value.dt)}</p>\n                    <p className=\"text-sm sm:float-left xs:float-none\">{getDate(value.dt)}</p>\n\n                    <div className=\"flex flex-row justify-center sm:flex-none sm:float-left sm:w-2/5 sm:flex-col xs:flex xs:flex-row xs:float-none xs:w-full\">\n                        <div>\n                            <img\n                                className=\"w-20\"\n                                src={`http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`}\n                            />\n                        </div>\n                        <div className=\"w-1/2 sm:flex sm:flex-row sm:w-full xs:flex-none xs:flex-col xs:w-1/2 xs:pl-2\">\n                            <p\n                                className=\"font-medium text-3xl\n                        \"\n                            >\n                                {Math.round(value.temp)}\n                                <span className=\"text-lg align-top font-normal\">&deg;F</span>\n                            </p>\n                            <p className=\"leading-5 text-base pl-3 sm:pt-4 sm:pl-1 xs:pt-0 xs:pl-3\">\n                                {value.weather[0].description}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"grid grid-cols-3 sm:mt-4 xs:mt-0 xs:pl-5\">\n                        <p className=\"col-span-2 pl-3\">Precipitation:</p>\n                        <p className=\"font-medium\">{value.pop}%</p>\n                        <p className=\"col-span-2 pl-3\">Humidity:</p>\n                        <p className=\"font-medium\">{value.humidity}%</p>\n                        <p className=\"col-span-2 pl-3\">Wind:</p>\n                        <p className=\"font-medium\">{Math.round(value.wind_speed)}mph</p>\n                    </div>\n                </div>\n            );\n        });\n        // backgroundChange(data[0].sunrise, data[0].sunset);\n        backgroundChangeforHourly(data[0].weather[0].icon);\n\n        return (\n            <div className=\"flex flex-col justify-center\">\n                {/* <p\n                    className=\"text-center text-2xl pt-10 pb-5 opacity-0\"\n                    style={{ opacity: fadeIn, transition: `opacity 0.8s ease` }}\n                >\n                    {timestr}\n                </p> */}\n                <div className=\"grid grid-cols-4 w-1100px mx-auto pt-16 xl:grid-cols-3 xl:w-800px lg:w-765px md:grid-cols-2 md:w-530px sm:grid-cols-none sm:w-full sm:px-5 sm:pt-20\">\n                    {sixHourDataUI}\n                </div>\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\nexport default HourlyWeather;\n\n// const data = [\n//         {\n//             dt: 1628190000,\n//             temp: 84.96,\n//             feels_like: 86.16,\n//             pressure: 1013,\n//             humidity: 49,\n//             dew_point: 63.66,\n//             uvi: 10.46,\n//             clouds: 1,\n//             visibility: 10000,\n//             wind_speed: 8.75,\n//             wind_deg: 239,\n//             wind_gust: 6.33,\n//             weather: [{ id: 800, main: 'Clear', description: 'clear sky', icon: '01d' }],\n//             pop: 0,\n//         },\n//         {\n//             dt: 1628193600,\n//             temp: 84.94,\n//             feels_like: 86.63,\n//             pressure: 1013,\n//             humidity: 51,\n//             dew_point: 64.8,\n//             uvi: 11.08,\n//             clouds: 1,\n//             visibility: 10000,\n//             wind_speed: 9.57,\n//             wind_deg: 230,\n//             wind_gust: 6.91,\n//             weather: [{ id: 800, main: 'Clear', description: 'clear sky', icon: '01d' }],\n//             pop: 0,\n//         },\n//         {\n//             dt: 1628197200,\n//             temp: 85.19,\n//             feels_like: 86.23,\n//             pressure: 1013,\n//             humidity: 48,\n//             dew_point: 63.3,\n//             uvi: 10.15,\n//             clouds: 1,\n//             visibility: 10000,\n//             wind_speed: 9.53,\n//             wind_deg: 231,\n//             wind_gust: 7.67,\n//             weather: [{ id: 800, main: 'Clear', description: 'clear sky', icon: '01d' }],\n//             pop: 0,\n//         },\n//     ];\n\n// time + i > 23 ? (\n//     <p>`${time + i - 24}AM`</p>\n// ) : 12 <= time + i <= 23 ? (\n//     <p>`${time + i - 12}PM`</p>\n// ) : (\n//     <p>`${time + i}AM`</p>\n// );\n","import React, { useEffect, useState } from 'react';\nimport Loading from './Loading';\n/* eslint-disable react/prop-types */\n\nfunction DailyWeather({ data, timezone, backgroundChange, date, selectedPage, dayOrNight }) {\n    const [fadeIn, setFadeIn] = useState(null);\n    useEffect(() => {\n        if (selectedPage === 'daily') {\n            setTimeout(() => {\n                setFadeIn('1');\n                console.log('fadein');\n            }, 500);\n        } else {\n            setFadeIn(null);\n        }\n        console.log(fadeIn);\n    }, [selectedPage]);\n    if (data) {\n        const option = {\n            hour: 'numeric',\n            // minute: '2-digit',\n            hour12: false,\n            timeZone: timezone,\n        };\n        const sec = data[0].dt;\n        const date = new Date(sec * 1000).toLocaleTimeString('en-US', option);\n        const sunriseSec = data[0].sunrise;\n        const sunrise = new Date(sunriseSec * 1000).toLocaleTimeString('en-US', option);\n        const sunsetSec = data[0].sunset;\n        const sunset = new Date(sunsetSec * 1000).toLocaleTimeString('en-US', option);\n\n        // backgroundChange(date, sunrise, sunset);\n\n        const getDate = (value) => {\n            const date = new Date(value * 1000);\n            const day = date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric',\n                timeZone: timezone,\n            });\n            return day;\n        };\n        const getTime = (value) => {\n            const date = new Date(value * 1000);\n            const time = date.toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: true,\n                timeZone: timezone,\n            });\n            return time;\n        };\n\n        const dailyDataUI = data.map((value, i) => {\n            return (\n                <div\n                    key={i}\n                    className={\n                        dayOrNight === 'day'\n                            ? 'bg-white bg-opacity-60 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                            : 'bg-gray-300 bg-opacity-70 rounded-xl flex-col p-6 mb-10 mx-auto w-60 opacity-0 lg:mb-6 sm:w-full sm:max-w-sm sm:p-4'\n                    }\n                    style={{ opacity: fadeIn, transition: `opacity ${i * 0.3}s ease` }}\n                >\n                    <p className=\"text-xl pb-1 font-medium\">{getDate(value.dt)}</p>\n                    <div className=\"flex flex-row justify-center h-28\">\n                        <div className=\"\">\n                            <img src={`http://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`} />\n                        </div>\n                        <div className=\"w-1/2 pr-3 xs:w-5/12\">\n                            <div className=\"text-right\">\n                                <span className=\"text-sm\">MAX </span>\n                                <span className=\"font-medium text-3xl\">{Math.round(value.temp.max)}</span>\n                                <span className=\"text-lg align-top\">&deg;F</span>\n                            </div>\n                            <div className=\"text-right\">\n                                <span className=\"text-sm\">MIN </span>\n                                <spam className=\"font-medium text-3xl\">{Math.round(value.temp.min)}</spam>\n                                <span className=\"text-lg align-top\">&deg;F</span>\n                            </div>\n                            <p className=\"leading-5 capitalize pl-3 sm:text-right\">{value.weather[0].description}</p>\n                        </div>\n                    </div>\n                    <div\n                        className=\"grid grid-cols-3 mt-3 align-bottom sm:px-16 xs:px-10 \n                    \"\n                    >\n                        <p className=\"col-span-2 pl-5 xs:pl-1\">Precipitation:</p>\n                        <p className=\"font-medium\">{value.pop}%</p>\n                        <p className=\"col-span-2 pl-5 xs:pl-1\">Humidity:</p>\n                        <p className=\"font-medium\">{value.humidity}%</p>\n                        {/* <p className=\"col-span-2 pl-5\">Sunrise:</p>\n                        <p>{getTime(value.sunrise)}</p>\n                        <p className=\"col-span-2 pl-5\">Sunset:</p>\n                        <p>{getTime(value.sunset)}</p> */}\n                    </div>\n                    {/* <div className=\"pt-5 flex flex-row justify-evenly\">\n                        <div>\n                            <p className=\"col-span-2\">Sunrise</p>\n                            <p>{getTime(value.sunrise)}</p>\n                        </div>\n                        <div>\n                            <p className=\"col-span-2\">Sunset</p>\n                            <p>{getTime(value.sunset)}</p>\n                        </div>\n                    </div> */}\n                </div>\n            );\n        });\n        backgroundChange(data[0].sunrise, data[0].sunset);\n        // backgroundChange(data[0].weather[0].icon);\n\n        return (\n            <div className=\"grid grid-cols-4 w-1100px mx-auto pt-16 xl:grid-cols-3 xl:w-800px lg:w-765px md:grid-cols-2 md:w-530px sm:grid-cols-none sm:w-full sm:px-5 sm:pt-20\">\n                {dailyDataUI}\n            </div>\n        );\n    } else {\n        return <Loading />;\n    }\n}\n\n// xs:grid-cols-2 xs:px-2 xs:pl-12 xs:w-60 xs:mx-auto\n\nexport default DailyWeather;\n\n// const data = [\n//     {\n//         dt: 1628190000,\n//         sunrise: 1628168847,\n//         sunset: 1628218222,\n//         moonrise: 1628158200,\n//         moonset: 1628212260,\n//         moon_phase: 0.91,\n//         temp: { day: 85.01, min: 70.97, max: 85.78, night: 76.42, eve: 84.72, morn: 70.97 },\n//         feels_like: { day: 86.23, night: 76.21, eve: 83.53, morn: 70.97 },\n//         pressure: 1013,\n//         humidity: 49,\n//         dew_point: 63.72,\n//         wind_speed: 9.57,\n//         wind_deg: 230,\n//         wind_gust: 7.67,\n//         weather: [{ id: 800, main: 'Clear', description: 'clear sky', icon: '01d' }],\n//         clouds: 1,\n//         pop: 0,\n//         uvi: 11.08,\n//     },\n//     {\n//         dt: 1628276400,\n//         sunrise: 1628255291,\n//         sunset: 1628304566,\n//         moonrise: 1628247840,\n//         moonset: 1628301600,\n//         moon_phase: 0.94,\n//         temp: { day: 86.16, min: 72.01, max: 88.14, night: 72.32, eve: 83.1, morn: 72.1 },\n//         feels_like: { day: 84.51, night: 71.98, eve: 81.81, morn: 71.78 },\n//         pressure: 1012,\n//         humidity: 34,\n//         dew_point: 53.1,\n//         wind_speed: 10.16,\n//         wind_deg: 170,\n//         wind_gust: 8.23,\n//         weather: [{ id: 800, main: 'Clear', description: 'clear sky', icon: '01d' }],\n//         clouds: 5,\n//         pop: 0,\n//         uvi: 10.89,\n//     },\n//     {\n//         dt: 1628362800,\n//         sunrise: 1628341736,\n//         sunset: 1628390908,\n//         moonrise: 1628337780,\n//         moonset: 1628390640,\n//         moon_phase: 0.97,\n//         temp: { day: 84.22, min: 69.24, max: 86.81, night: 71.91, eve: 82.18, morn: 69.24 },\n//         feels_like: { day: 82.65, night: 71.47, eve: 81.27, morn: 68.68 },\n//         pressure: 1013,\n//         humidity: 34,\n//         dew_point: 51.08,\n//         wind_speed: 10.18,\n//         wind_deg: 187,\n//         wind_gust: 7.34,\n//         weather: [{ id: 800, main: 'Clear', description: 'clear sky', icon: '01d' }],\n//         clouds: 0,\n//         pop: 0,\n//         uvi: 10.88,\n//     },\n// ];\n","import React, { useState, useEffect } from 'react';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyWeather from './HourlyWeather';\nimport DailyWeather from './DailyWeather';\nimport { GetWeatherApi } from './service/service';\nimport Loading from './Loading';\n/* eslint-disable react/prop-types */\nfunction Weather({ selectedPage, apiFilter, lat, lon, backgroundChange, backgroundChangeforHourly, dayOrNight }) {\n    const results = GetWeatherApi(apiFilter, lat, lon);\n    if (results.current || results.hourly || results.daily) {\n        // backgroundChange(results.current.dt, results.current.sunrise, results.current.sunset);\n        if (selectedPage === 'current') {\n            // setFadeIn({\n            //     opacity: '1',\n            //     transitionDuration: '0.7s',\n            //     transitionProperty: 'opacity',\n            // });\n            return (\n                <CurrentWeather\n                    data={results.current}\n                    timezone={results.timezone}\n                    backgroundChange={backgroundChange}\n                    selectedPage={selectedPage}\n                    dayOrNight={dayOrNight}\n                />\n            );\n        } else if (selectedPage === 'hourly') {\n            return (\n                <HourlyWeather\n                    data={results.hourly}\n                    timezone={results.timezone}\n                    backgroundChangeforHourly={backgroundChangeforHourly}\n                    selectedPage={selectedPage}\n                    dayOrNight={dayOrNight}\n                />\n            );\n        } else if (selectedPage === 'daily') {\n            return (\n                <DailyWeather\n                    data={results.daily}\n                    timezone={results.timezone}\n                    backgroundChange={backgroundChange}\n                    selectedPage={selectedPage}\n                    dayOrNight={dayOrNight}\n                />\n            );\n        }\n    } else {\n        return <Loading />;\n    }\n}\n\nexport default Weather;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nexport function GetWeatherApi(apiFilter, lat, lon) {\n    const [apiData, setApiData] = useState({});\n    const apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${apiFilter}&units=imperial&appid=0f4895c08c6b38a4ddbee7eb8e8f71e3`;\n    useEffect(() => {\n        axios.get(apiUrl).then(({ data }) => {\n            setApiData(data);\n            // console.log(data);\n        });\n    }, [apiUrl]);\n    return apiData;\n}\n","export const database = [\n    {\n        label: 'Los Angeles',\n        value: 'losAngeles',\n        lat: 34.05,\n        lon: -118.24,\n        timezone: 'America/Los_Angeles',\n    },\n    {\n        label: 'New York',\n        value: 'newYork',\n        lat: 40.71,\n        lon: -74.01,\n        timezone: 'America/New_York',\n    },\n    {\n        label: 'Tokyo',\n        value: 'tokyo',\n        lat: 35.68,\n        lon: 139.65,\n        timezone: 'Japan',\n    },\n    {\n        label: 'London',\n        value: 'london',\n        lat: 51.51,\n        lon: -0.13,\n        timezone: 'Europe/London',\n    },\n];\n","import React from 'react';\nimport { database } from './database/database';\n/* eslint-disable react/prop-types */\n\nfunction AreaSearch({ onChange, dayOrNight, selectedCityName }) {\n    const options = database.map((value, i) => {\n        // const selected = selectedCityName === value.label ? 'selected' : null;\n        return (\n            <option value={value.value} key={i}>\n                {value.label}\n            </option>\n        );\n    });\n    return (\n        <div\n            className={\n                dayOrNight === 'day'\n                    ? 'font-baloo font-semibold mt-32 h-12 text-gray-600 flex absolute top-0 right-56 pt-0 2xl:right-36 xl:right-8 lg:mt-12 sm:right-3 sm:top-28'\n                    : ' font-baloo font-semibold mt-32 h-12 text-white flex absolute top-0 right-56 pt-0 2xl:right-36 xl:right-8 lg:mt-12 sm:right-3 sm:top-28'\n            }\n        >\n            <label htmlFor=\"city\" className=\"pr-2 text-lg h-12 mt-2\">\n                Location{' '}\n            </label>\n            <select\n                className={\n                    dayOrNight === 'day'\n                        ? 'rounded bg-white bg-opacity-60 text-gray-600 text-xl px-3 sm:text-lg sm:h-10 cursor-pointer'\n                        : 'rounded bg-yellow-400 bg-opacity-30 text-white text-xl px-3 sm:text-lg sm:h-10 cursor-pointer'\n                }\n                name=\"city\"\n                id=\"city\"\n                onChange={onChange}\n                value={selectedCityName}\n            >\n                {options}\n            </select>\n        </div>\n    );\n}\n\nexport default AreaSearch;\n","import React, { useState } from 'react';\nimport Weather from './Weather';\nimport AreaSearch from './AreaSearch';\nimport { database } from './database/database';\nimport { GetWeatherApi } from './service/service';\n\nfunction MainPage({ backgroundChange, backgroundChangeforHourly, dayOrNight }) {\n    const [selectedPage, setSelectedPage] = useState('current');\n    const [apiFilter, setApiFilter] = useState('minutely,hourly,daily,alerts');\n    const [selectedCityName, setSelectedCityName] = useState(database[0].label);\n    const [lat, setLat] = useState(database[0].lat);\n    const [lon, setLon] = useState(database[0].lon);\n    const [timezone, setTimeZone] = useState(database[0].timezone);\n\n    const categories = {\n        current: 'minutely,hourly,daily,alerts',\n        hourly: 'minutely,current,daily,alerts',\n        daily: 'minutely,hourly,current,alerts',\n    };\n\n    const pageSelect = (event) => {\n        const selected = event.currentTarget.value;\n        setSelectedPage(selected);\n        setApiFilter(\n            selected === 'current' ? categories.current : selected === 'hourly' ? categories.hourly : categories.daily\n        );\n    };\n\n    const getCity = (event) => {\n        const selectedCity = event.currentTarget.value;\n        setSelectedCityName(selectedCity);\n        database.forEach((val) => {\n            if (val.value === selectedCity) {\n                setLat(val.lat);\n                setLon(val.lon);\n                setTimeZone(val.timezone);\n            }\n        });\n        console.log(selectedCityName);\n    };\n\n    const resetBtn = () => {\n        setSelectedPage('current');\n        setApiFilter('minutely,hourly,daily,alerts');\n        setSelectedCityName(database[0].label);\n        setLat(database[0].lat);\n        setLon(database[0].lon);\n        setTimeZone(database[0].timezone);\n    };\n\n    return (\n        <div>\n            <div\n                onClick={resetBtn}\n                className=\"bg-pink-400 opacity-0 w-64 h-24 flex absolute top-5 left-7 z-50 cursor-pointer sm:top-2 sm:left-2 sm:w-56 sm:h-20\"\n            ></div>\n            <div className=\"flex flex-row justify-between \">\n                <div className=\"w-1000px h-12 pl-4 mt-32 flex flex-row justify-left bg-gradient-to-r from-amber-400 via-amber-400 bg-opacity-30 text-white xl:w-800px lg:w-600px sm:mt-0 sm:bg-amber-400 sm:justify-center sm:w-screen sm:pl-0\">\n                    <button\n                        onClick={pageSelect}\n                        value=\"current\"\n                        className={\n                            selectedPage === 'current'\n                                ? ' text-gray-600 px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                                : 'px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                        }\n                    >\n                        Today\n                    </button>\n                    <button\n                        onClick={pageSelect}\n                        value=\"hourly\"\n                        className={\n                            selectedPage === 'hourly'\n                                ? 'text-gray-600  px-6 h-12 mx-20 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 lg:mx-10 xs:text-lg'\n                                : 'px-6 h-12 mx-20 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 lg:mx-10 xs:text-lg'\n                        }\n                    >\n                        Hourly\n                    </button>\n                    <button\n                        onClick={pageSelect}\n                        value=\"daily\"\n                        className={\n                            selectedPage === 'daily'\n                                ? 'text-gray-600 px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                                : 'px-6 h-12 text-xl font-baloo font-bold hover:text-gray-500 transition lg:px-3 xs:text-lg'\n                        }\n                    >\n                        Daily\n                    </button>\n                </div>\n                <AreaSearch\n                    selector={database}\n                    onChange={getCity}\n                    dayOrNight={dayOrNight}\n                    selectedCityName={selectedCityName}\n                />\n            </div>\n            <div className=\"font-baloo\">\n                {/* <p>{selectedCityName}</p> */}\n                <Weather\n                    selectedPage={selectedPage}\n                    apiFilter={apiFilter}\n                    lat={lat}\n                    lon={lon}\n                    backgroundChange={backgroundChange}\n                    backgroundChangeforHourly={backgroundChangeforHourly}\n                    dayOrNight={dayOrNight}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default MainPage;\n","import React from 'react';\n\nfunction Footer() {\n    let day = new Date();\n    let year = day.getFullYear();\n    return (\n        <div className=\"text-right pt-40 mr-10 pb-5\">\n            <small className=\"w-screen font-baloo text-amber-400\">&copy; {year} Ryo Inciong</small>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport MainPage from './MainPage';\nimport Footer from './Footer';\nimport Loading from './Loading';\nimport { setConstantValue } from 'typescript';\n\nfunction App() {\n    const [dayOrNight, setDayOrNight] = useState();\n    // const [appHeight, setAppHeight] = useState(0);\n    // const [classBg, setClassBg] = useState();\n\n    const backgroundChangeforHourly = (icon) => {\n        if (/d$/.test(icon)) {\n            console.log('daytime');\n            setDayOrNight('day');\n        } else {\n            console.log('nighttime');\n            setDayOrNight('night');\n        }\n    };\n\n    const backgroundChange = (sunrise, sunset) => {\n        const currenttime = new Date().getTime() / 1000;\n        if (currenttime - sunrise > 0 && currenttime - sunset < 0) {\n            setDayOrNight('day');\n        } else {\n            setDayOrNight('night');\n        }\n    };\n\n    // const handleResize = (e) => {\n    //     setAppHeight(window.innerHeight);\n    // };\n\n    // useEffect(() => {\n    //     classBgHandler();\n\n    //     return () => {\n    //         classBgHandler();\n    //     };\n    // }, []);\n\n    // const classBgHandler = () => {\n    //     if (window.innerWidth / window.innerHeight < 1) {\n    //         dayOrNight === 'night';\n    //         setClassBg(\n    //             dayOrNight === 'night'\n    //                 ? 'bg-nighttimeV bg-scroll transition-all duration-500'\n    //                 : 'bg-daytimeV bg-scroll transition-all duration-500'\n    //         );\n    //     } else {\n    //         setClassBg(\n    //             dayOrNight === 'night'\n    //                 ? 'bg-nighttime bg-scroll transition-all duration-500'\n    //                 : 'bg-daytime bg-scroll transition-all duration-500'\n    //         );\n    //     }\n    // };\n\n    return (\n        <div\n            className={\n                dayOrNight === 'night'\n                    ? 'bg-nighttime transition-all duration-500'\n                    : 'bg-daytime transition-all duration-500'\n            }\n            style={\n                window.innerWidth / window.innerHeight < 1173 / 660\n                    ? {\n                          backgroundAttachment: 'fixed',\n                          backgroundPosition: 'bottom',\n                          //   height: `${window.innerHeight}px`,\n                          backgroundSize: `auto ${window.innerHeight}px, cover`,\n                          backgroundRepeat: 'no-repeat',\n                          //   height: '100vh',\n                      }\n                    : {\n                          backgroundAttachment: 'fixed',\n                          backgroundPosition: 'bottom',\n                          height: `100%`,\n                          minHeight: `100vh`,\n                      }\n            }\n        >\n            <Header className={dayOrNight} />\n            <MainPage\n                backgroundChange={backgroundChange}\n                backgroundChangeforHourly={backgroundChangeforHourly}\n                dayOrNight={dayOrNight}\n            />\n            <Footer />\n        </div>\n        // <Loading />\n    );\n}\n\nexport default App;\n\n// removed 'min-h-screen h-full' from background tailwind css\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}